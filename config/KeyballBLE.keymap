#define ZMK_POINTING_DEFAULT_SCRL_VAL 120    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        Esc_QW {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
            slow-release;
            timeout-ms = <300>;
            layers = <0>;
        };

        ctrl {
            bindings = <&kp LCTRL>;
            key-positions = <8 9>;
            slow-release;
            timeout-ms = <300>;
            layers = <0>;
        };

        caps {
            bindings = <&kp CLCK>;
            key-positions = <3 4>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        DIST_00input: DIST_00input {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp KP_NUMBER_0 &kp KP_NUMBER_0>;
            label = "DIST_00INPUT";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        ROTATE: ROTATE {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "ROTATE";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E             &kp R                      &kp T                                                    &kp Y          &kp U  &kp I      &kp O    &kp P
&kp A             &kp S         &kp D             &kp F                      &kp G      &mkp LCLK                        &kp DELETE   &kp H          &kp J  &kp K      &kp L    &kp SEMI
&mt LEFT_SHIFT Z  &kp X         &kp C             &kp V                      &kp B      &mt KP_NUMBER_4 KP_NUMBER_3      &lt 6 MINUS  &kp N          &kp M  &kp COMMA  &kp DOT  &kp SLASH
&lt 5 TAB         &kp LEFT_ALT  &kp LEFT_COMMAND  &lt_to_layer_0 3 CAPSLOCK  &kp SPACE  &kp BACKSPACE                    &kp ENTER    &kp BACKSPACE                             &lt 1 SLASH
            >;

            sensor-bindings = <&ROTATE SCRL_DOWN SCRL_UP>;
        };

        Num+FUNCTION {
            bindings = <
&kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PERCENT  &kp SLASH                          &kp F1  &kp F2  &kp F3  &kp F4   &kp F5
&kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp ASTRK    &kp KP_MINUS  &trans      &kp F13  &kp F6  &kp F7  &kp F8  &kp F9   &kp F10
&kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PLUS     &kp KP_EQUAL  &trans      &trans   &trans  &trans  &trans  &kp F11  &kp F12
&kp KP_NUMBER_0  &DIST_00input    &kp DOT          &kp COLON    &trans        &trans      &trans   &trans                           &trans
            >;
        };

        NUM {
            bindings = <
&kp MINUS                   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS                                                   &kp CARET         &kp AMPERSAND      &kp TILDE       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp SLASH                   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp ASTERISK  &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &kp EXCLAMATION   &kp AT_SIGN        &kp HASH        &kp DOLLAR            &kp PERCENT
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD    &kp EQUAL                    &trans          &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE       &kp BACKSLASH
&trans                      &trans           &trans           &trans           &trans        &trans                       &trans          &trans                                                                     &kp PIPE
            >;
        };

        YAJIRUSHI {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &kp ESC  &trans    &kp UP    &kp PRINTSCREEN  &kp HOME
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans   &kp LEFT  &kp DOWN  &kp RIGHT        &kp END
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans   &trans    &trans    &trans           &kp PG_UP
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                                        &kp PG_DN
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans    &trans     &trans     &trans     &trans                           &trans    &trans     &trans     &trans     &trans
&mkp MB4  &mkp LCLK  &mkp MCLK  &mkp RCLK  &mkp MB5  &mkp LCLK      &trans  &mkp MB4  &mkp LCLK  &mkp MCLK  &mkp RCLK  &mkp MB5
&trans    &trans     &trans     &trans     &trans    &mkp RCLK      &trans  &trans    &trans     &trans     &trans     &trans
&trans    &trans     &trans     &trans     &trans    &trans         &trans  &trans                                     &trans
            >;
        };

        HIROKI {
            bindings = <
&kp TILDE       &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp PERCENT                      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp KP_EQUAL      &kp KP_MINUS       &kp PLUS
&trans          &trans           &trans       &trans    &trans       &trans      &trans  &trans                &trans                 &trans            &kp ASTRK          &kp COLON
&kp LEFT_SHIFT  &trans           &trans       &trans    &trans       &trans      &trans  &trans                &trans                 &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp DOUBLE_QUOTES
&trans          &trans           &trans       &trans    &trans       &trans      &trans  &trans                                                                            &kp QMARK
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                                 &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans     &trans      &studio_unlock  &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kt KP_N4  &trans      &bootloader     &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans     &trans      &trans          &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
